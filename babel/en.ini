[meta]
name = English (UK)
language = en
contributors = Yiays#5940
inherit = 

[language]
command_language_help = {c:main/prefix_short}language (get|set (langcode)|list)
	changes the language that will be used when speaking to you or your guild. use `language list` to find translations and then set one.
	only admins can change the guild language.
list_title = available languages
set_howto = set a language using `{c:main/prefix_short}language set` and a given language code below.
contribute_cta = contribute to the translation effort here: {c:language/contribute_url}
unknown_contributors = no contributors credited
coverage_label = *coverage:* {coverage}%%
origin_reason_author = language set for you
origin_reason_guild = language set for this guild
origin_reason_default = using the default language for this bot
set_failed_invalid_pattern = your language code must fit the pattern. (ie. `en` or `br-PT`, this is case sensitive)
set_warning_no_match = this language hasn't been translated yet, but if it ever is, you'll be among the first to see it.
set_success = success! {c:main/botname} will now speak {language} {usermode?to you|in this guild}.

[help]
command_help_help = {c:main/prefix_short}help [command]
	highlights some useful commands and explains how to use the prefixes.
	when [command] is provided, specific instructions for a command are provided.
command_about_help = {c:main/prefix_short}about
	information about this bot, including an invite link
command_changes_help = {c:main/prefix_short}help [version]
	lists changes made to {c:main/botname} since the most recent update (or an update version number you specify)
command_feedback_help = {c:main/prefix_short}feedback (your feedback)
	sends feedback directly to the developer(s).
no_docs = this command doesn't currently have any usage information
future_command = this command will be coming in a future update.
obsolete_command = this command has been removed. there's no plans to restore it.
moved_command = functionality of this command has moved to `{c:main/prefix_short}{cmd}`.
no_command = this command either doesn't exist or is currently disabled.
introduction = **the prefix is `{c:main/prefix_short}`.**{longprefix? *you can also use `{longprefix}`*|}
	get usage info for a command using `{c:main/prefix_short}help [command]`.
	{videoexamples?you can also see video examples on the [help website]({c:help/helpurl})|}
	{serverinv?get dedicated support from the developer and other users on the [support server]({serverinv})|}
helpurl_cta = go to {c:help/helpurl} to learn more!
creator_footer = {c:main/botname} v{c:main/ver} created by {c:main/creator}
about_title = about {c:main/botname}
bot_description = merelybot is a generally helpful bot for running servers with a variety of features for admins, mods, and users alike.
	merelybeta provides a preview of upcoming changes to merelybot.
about_field1_title = âœ¨ features
about_field1_value = {c:main/botname} has **{cmds}** commands available to **{guilds}** servers.
	these commands cover a wide range of functionality from dice rolling, to polls, to server cleaning, to custom welcome messages!
about_field2_title = ðŸ“± mobile optimized
about_field2_value = {c:main/botname} {longprefix?has a long version of its prefix ({c:main/prefix_long}) intended to be easier to type on mobile. also, |}{c:main/botname} prefers to use back-and-forth conversations and reactions instead of complex commands.
about_field3_title = ðŸ“š dedicated support
about_field3_value = {c:main/botname} has a powerful help command where you can get usage information for any command.
	{videoexamples?video examples demonstrating how to use commands can be found on {c:main/botname}'s [website]({c:help/helpurl}).|}
	{serverinv?and a [support server]({c:help/serverinv}) where you can get any questions answered and see demos.|}
about_field4_title = ðŸ§© modular codebase
about_field4_value = {c:main/botname} is built from the modular *merely framework*, which makes it possible for updates to be released without any interruption and makes it possible for new features to be rolled out rapidly.
about_field5_title = âž• add to your server
about_field5_value = add {c:main/botname} to your discord server with this link: {invite}
changelog_title = changelog for {c:main/botname}
changelog_description = list of changes from v{ver}:
changelog_cta = view the full changelog online: ({logurl})
feedback_title = feedback from {author}{guild? in {guild}|}
feedback_success = your feedback was sent successfully! you may be reached out to in DMs for further information.
feedback_failed = feedback doesn't appear to currently be working, please try again later.
feedback_not_implemented = {serverinv?you'll need to join the official support server ({serverinv}) to give feedback.|{c:main/botname} isn't able to process this feedback at this time, please try again later.
feedback_cta = *you can always join the official support server ({c:help/serverinv}) to get help or give feedback more directly.*

[error]
commandnotfound = unable to find a matching command, use `{c:main/prefix_short}help` to get started.
missingrequiredargument = a required parameter for this command is missing or invalid.
noprivatemessage = this command *can't* be used in private messages.
privatemessageonly = this command can **only** be used in private messages.
commanderror = an error occured while trying to run this command, please try again later.

[auth]
unauthorized = you must be a server owner to use this command!
not_admin = you must be an admin to use this command!
not_mod = you must be a moderator to use this command!
not_superuser = you must be a {c:main/botname} superuser to use this command!
not_authuser = you must be a {c:main/botname} authuser to use this command!

[example]
command_example_help = {c:main/prefix_short}example (echo)
	repeats whatever you send back

[admin]
command_janitor_help = {c:main/prefix_short}janitor (join [strict]|leave)
	janitor will auto-delete messages after 30 seconds, resulting in a cleaner channel.
	if you provide the strict flag, janitor will delete all messages, not just messages to and from this bot.
command_clean_help = {c:main/prefix_short}clean (n|start_id-end_id) [strict]
	mass-deletes messages from a channel, n specifies how many messages back to look, 'strict' deletes all messages, not just messages to and from this bot.
	if you instead provide two message ids seperated by a dash, clean will run on this range instead of scanning upwards from the current message.
command_die_help = {c:main/prefix_short}die [saveconfig]
	shuts down the bot safely, saves the config file if you provide a value
janitor_set_success = successfully added or updated the janitor for this channel.
janitor_unset_success = successfully removed the janitor for this channel.
clean_success = deleted {n} message(s) successfully.
die_success = shutting down...

[greeter]
command_welcome_help = {c:main/prefix_short}welcome (get|set|clear)
	control the welcome message for your server
	use `set` to get instructions on how to set a new welcome message
command_farewell_help = {c:main/prefix_short}farewell (get|set|clear)
	control the farewell message for your server
	use `set` to get instructions on how to set a new farewell message
greeting_preview = in {channel}: {message}
welcome_set_instructions = to set a welcome message, use `{c:main/prefix_short}welcome set Welcome, {} to the {} server!` (as an example)
	*the first {} will always become a mention of the user, and the second {} will always be the current server name.*
welcome_set_success = successfully set the welcome message!
welcome_clear_success = removed and disabled the welcome message.
welcome_clear_failed = you don't currently have a welcome message set.
farewell_set_instructions = to set a welcome message, use `{c:main/prefix_short}welcome set Welcome, {} to the {} server!` (as an example)
	*the first {} will always become a mention of the user, and the second {} will always be the current server name.*
farewell_set_success = successfully set the farewell message!
farewell_clear_success = removed and disabled the farewell message.
farewell_clear_failure = you don't currently have a farewell message set.

[reactroles]
command_reactrole_help = {c:main/prefix_short}reactrole (prompt)
	creates a message with your given prompt for reactions. each react you provide can be associated with roles.
	roles will be given to any users that react with a given reaction.
setup1 = react to the prompt to add a reactionrole.{canstop? *don't react to finish.*|}
setup2 = mention role(s) to add them to {emoji}
setup2_repeat = **this emoji has already been given roles.**
setup_cancel = canceled reactionroles setup *(timeout after each step is 30 seconds)*
setup_success = reactionroles setup complete! delete the prompt at any time to undo.
role_granted = given you the role(s) {roles}.
role_taken = taken the role(s) {roles}.

[poll]
command_poll_help = {c:main/prefix_short}poll (title)
	creates a poll, you'll be asked to provide answers and when the poll will expire after providing a title
poll_preview = poll preview:
setup1 = *reply with an answer to add one.* (reply with '[stop]' at any time to stop adding questions)
setup_cancelled = poll cancelled.
setup2 = *reply with a number of minutes to set the countdown.*
setup2_failed = using the default countdown
poll_created = {author} has started a poll.
timenames = year,month,week,day,hour,minute,second
timeplurals = years,months,weeks,days,hours,minutes,seconds
prepositions = happened,happening closed,closing
list_conjunction = ,
list_last_conjunction = and
far_past = closed {timelist} ago.
near_past = closed recently.
present = closing now.
near_future = closing soon.
far_future = closing in {timelist}.
vote_cta = react to vote | this poll is{multichoice?| not} multichoice
no_winner = the poll *"{title}"* expired with no votes.
one_winner = the winner of the *"{title}"* poll is **"{winner}"**
multiple_winners = the {num} winners of the *"{title}"* poll are **"{winners}"**

